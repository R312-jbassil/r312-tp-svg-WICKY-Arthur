---
import { ui } from "../i18n/ui.js";
const locale = (Astro.locals.lang as "en" | "fr") ?? "en";
---

<html lang={locale} data-theme="light">
    <head>
        <title>{ui[locale].signup.title}</title>
        <meta name="viewport" content="width=device-width" />
        <link
            href="https://cdn.jsdelivr.net/npm/daisyui@3.8.0/dist/full.css"
            rel="stylesheet"
            type="text/css"
        />
        <script src="https://cdn.tailwindcss.com"></script>
    </head>
    <body class="min-h-screen flex items-center justify-center bg-base-200">
        <div class="card w-full max-w-md shadow-xl bg-base-100">
            <div class="card-body">
                <h1 class="card-title text-3xl mb-4 justify-center">
                    {ui[locale].signup.title}
                </h1>
                <!-- Formulaire d'inscription -->
                <form id="signup-form" class="flex flex-col gap-4">
                    <input
                        type="text"
                        name="name"
                        placeholder={ui[locale].signup.name}
                        required
                        class="input input-bordered"
                    />
                    <input
                        type="email"
                        name="email"
                        placeholder={ui[locale].signup.email}
                        required
                        class="input input-bordered"
                    />
                    <input
                        type="password"
                        name="password"
                        placeholder={ui[locale].signup.password}
                        required
                        class="input input-bordered"
                    />
                    <input
                        type="password"
                        name="passwordConfirm"
                        placeholder={ui[locale].signup.confirmPassword}
                        required
                        class="input input-bordered"
                    />
                    <button type="submit" class="btn btn-primary w-full"
                        >{ui[locale].signup.signupButton}</button
                    >
                </form>
                <!-- Zone d'affichage du statut -->
                <p id="status" class="mt-4 text-center text-error"></p>
                <div class="text-center mt-4">
                    <p>{ui[locale].signup.alreadyHaveAccount}</p>
                    <a href="/login" class="text-primary hover:underline"
                        >{ui[locale].signup.loginLink}</a
                    >
                </div>
            </div>
        </div>
    </body>
</html>

<script define:vars={{ translations: ui[locale].signup }}>
    //@ts-nocheck
    const form = document.getElementById("signup-form");
    const status = document.getElementById("status");

    // Gestion de la soumission du formulaire
    form.addEventListener("submit", async (e) => {
        e.preventDefault();
        const formData = new FormData(form);

        // Vérification que les mots de passe correspondent
        if (formData.get("password") !== formData.get("passwordConfirm")) {
            status.textContent = translations.passwordMismatch;
            return;
        }

        // Envoi des informations au serveur via l'API /api/signup
        try {
            const res = await fetch("/api/signup", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    name: formData.get("name"),
                    email: formData.get("email"),
                    password: formData.get("password"),
                }),
            });
            // Traitement de la réponse
            if (res.ok) {
                status.textContent = translations.signupSuccess;
                status.className = "mt-4 text-center text-success";

                // Redirection vers la page de connexion après un court délai
                setTimeout(() => {
                    window.location.href = "/login";
                }, 1500);
            } else {
                const errorData = await res.json();
                status.textContent = `${translations.signupError}${errorData.message || "Impossible de créer le compte"}`;
            }
        } catch (error) {
            console.error("Erreur lors de l'inscription:", error);
            status.textContent = translations.generalError;
        }
    });
</script>
