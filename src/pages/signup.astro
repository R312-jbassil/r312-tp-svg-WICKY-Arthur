---
import Layout from "../layouts/Layout.astro";
import { ui } from "../i18n/ui.js";
const locale = (Astro.locals.lang as "en" | "fr") ?? "en";
---

<Layout>
    <div class="hero min-h-screen">
        <div class="hero-content flex-col">
            <div class="text-center">
                <h1 class="text-5xl font-bold">{ui[locale].signup.title}</h1>
            </div>
            <div
                class="card flex-shrink-0 w-full max-w-md shadow-2xl bg-base-100"
            >
                <div class="card-body">
                    <form id="signup-form" class="form-control">
                        <div class="form-control">
                            <label class="label">
                                <span class="label-text"
                                    >{ui[locale].signup.name}</span
                                >
                            </label>
                            <input
                                type="text"
                                name="name"
                                placeholder={ui[locale].signup.name}
                                required
                                class="input input-bordered"
                            />
                        </div>
                        <div class="form-control">
                            <label class="label">
                                <span class="label-text"
                                    >{ui[locale].signup.email}</span
                                >
                            </label>
                            <input
                                type="email"
                                name="email"
                                placeholder={ui[locale].signup.email}
                                required
                                class="input input-bordered"
                            />
                        </div>
                        <div class="form-control">
                            <label class="label">
                                <span class="label-text"
                                    >{ui[locale].signup.password}</span
                                >
                            </label>
                            <input
                                type="password"
                                name="password"
                                placeholder={ui[locale].signup.password}
                                required
                                class="input input-bordered"
                            />
                        </div>
                        <div class="form-control">
                            <label class="label">
                                <span class="label-text"
                                    >{ui[locale].signup.confirmPassword}</span
                                >
                            </label>
                            <input
                                type="password"
                                name="passwordConfirm"
                                placeholder={ui[locale].signup.confirmPassword}
                                required
                                class="input input-bordered"
                            />
                        </div>
                        <div class="form-control mt-6">
                            <button type="submit" class="btn btn-primary"
                                >{ui[locale].signup.signupButton}</button
                            >
                        </div>
                    </form>
                    <p id="status" class="mt-4 text-center text-error"></p>
                    <div class="text-center mt-4">
                        <p>{ui[locale].signup.alreadyHaveAccount}</p>
                        <a href="/login" class="link link-hover"
                            >{ui[locale].signup.loginLink}</a
                        >
                    </div>
                </div>
            </div>
        </div>
    </div>
</Layout>

<script define:vars={{ translations: ui[locale].signup }}>
    //@ts-nocheck
    const form = document.getElementById("signup-form");
    const status = document.getElementById("status");

    // Gestion de la soumission du formulaire
    form.addEventListener("submit", async (e) => {
        e.preventDefault();
        const formData = new FormData(form);

        // Vérification que les mots de passe correspondent
        if (formData.get("password") !== formData.get("passwordConfirm")) {
            status.textContent = translations.passwordMismatch;
            return;
        }

        // Envoi des informations au serveur via l'API /api/signup
        try {
            const res = await fetch("/api/signup", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    name: formData.get("name"),
                    email: formData.get("email"),
                    password: formData.get("password"),
                }),
            });
            // Traitement de la réponse
            if (res.ok) {
                status.textContent = translations.signupSuccess;
                status.className = "mt-4 text-center text-success";

                // Redirection vers la page de connexion après un court délai
                setTimeout(() => {
                    window.location.href = "/login";
                }, 1500);
            } else {
                const errorData = await res.json();
                status.textContent = `${translations.signupError}${errorData.message || "Impossible de créer le compte"}`;
            }
        } catch (error) {
            console.error("Erreur lors de l'inscription:", error);
            status.textContent = translations.generalError;
        }
    });
</script>
